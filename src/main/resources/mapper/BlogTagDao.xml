<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hjwsblog.hjwsblog.Dao.BlogTagDao">
    <resultMap id="BaseResultMap" type="com.hjwsblog.hjwsblog.entity.BlogTag">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap id="BaseCountResultMap" type="com.hjwsblog.hjwsblog.entity.BlogTagCount">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_count" jdbcType="INTEGER" property="tagCount"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
    </resultMap>
    <select id="getTotalTags"  resultType="int">
        select count(*) from tag
        where is_deleted=0
    </select>

    <select id="getTagCount" resultMap="BaseCountResultMap">
        SELECT a.* FROM (
            SELECT t_r.*,t.tag_name FROM
            (SELECT r.tag_id,r.tag_count FROM
             (SELECT tag_id ,COUNT(*) AS tag_count FROM
              (SELECT tr.tag_id FROM blog_tag_relation tr LEFT JOIN blog b ON tr.blog_id = b.blog_id WHERE b.is_deleted=0)
                trb GROUP BY tag_id) r ) AS t_r LEFT JOIN tag t ON t_r.tag_id = t.tag_id WHERE t.is_deleted=0) a
        ORDER BY a.tag_count DESC
        LIMIT 20
    </select>

    <select id="findTagList" parameterType="Map" resultMap="BaseResultMap">
        select * from tag
        where is_deleted = 0
        order by tag_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="selectByTagName" resultMap="BaseResultMap" parameterType="String">
        select * from tag
        where tag_name = #{tagName} and is_deleted = 0
    </select>

    <insert id="insertSelective" parameterType="com.hjwsblog.hjwsblog.entity.BlogTag">
        insert into tag(tag_name)
        values (#{tagName})
    </insert>

    <update id="deleteBatch">
        update tag
        set is_deleted = 1
        where tag_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>